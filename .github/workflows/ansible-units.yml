# README FIRST
# 1. replace "NAMESPACE" and "COLLECTION_NAME" with the correct name in the env section (e.g. with 'community' and 'mycollection')
# 2. If you don't have unit tests remove that section
# 3. If your collection depends on other collections ensure they are installed, see "Install collection dependencies"
# If you need help please ask in #ansible-devel on Freenode IRC

name: Units
on:
  # Run Units against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # Run Units once per day (at 07:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  schedule:
    - cron: '0 7 * * *'
env:
  NAMESPACE: equinix
  COLLECTION_NAME: metal
jobs:
  ###
  # Unit tests (OPTIONAL)
  #
  # https://docs.ansible.com/ansible/latest/dev_guide/testing_units.html
  units:
    runs-on: ubuntu-latest
    name: Units (â’¶${{ matrix.ansible }})
    strategy:
      # As soon as the first unit test fails, cancel the others to free up the CI queue
      fail-fast: true
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
          - devel
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v3.1.2
        with:
          # it is just required to run that once as "ansible-test units" in the docker image
          # will run on all python versions it supports.
          python-version: 3.8

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # OPTIONAL If your unit test requires Python libraries from other collections
      # Install them like this
      # - name: Install collection dependencies
      #   run: ansible-galaxy collection install ansible.netcommon ansible.utils -p .

      # Run the unit tests
      - name: Run unit test
        run: ansible-test units -v --color --docker --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

        # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # See the reports at https://codecov.io/gh/GITHUBORG/REPONAME
      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
